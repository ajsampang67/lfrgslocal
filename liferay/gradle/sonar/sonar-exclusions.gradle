// We cannot use the plugins DSL, since we are inside a script plugin
subprojects {
    pluginManager.withPlugin('java') {
        logger.info "[sonar-exclusions] 'java' plugin detected in ${project}"

        sonarqube {
            properties {
                // find files that will be excluded by content
                def generatedFiles = fileTree(project.projectDir).include("**/*.java")
                        .files.findAll {
                    it.text.contains("* @generated") ||
                            it.text.contains("This file was generated by the JavaTM Architecture")
                }
                        .collect { project.relativePath(it) }

                generatedFiles += ["**/acord/jaxb/**/*.java", "**/acord/xml/**/*.java"]

                def generatedFilesCoverage = fileTree(project.projectDir).include("**/*.java")
                        .files.findAll {
                    it.text.contains("@XmlRootElement") ||
                            it.text.contains("@XmlElement")
                }
                        .collect { project.relativePath(it) }

                generatedFilesCoverage += generatedFiles
                generatedFilesCoverage += ["**/*Exception.java"]

                property "sonar.coverage.exclusions", generatedFilesCoverage
                property "sonar.exclusions", generatedFiles

                logger.info "[sonar-exclusions] Read SonarScanner properties for ${project} (exclusions)"
            }
        }
    }
}
